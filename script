
# R script process for the single cell analysis of the kidney cortex (merging two samples)
# load library in R environment
library(Seurat)
# load and create objet for kidney one
kidney1 <- Read10X(data.dir = "~/kid1/")
dim(kidney1)
kid1 <- CreateSeuratObject(raw.data = kidney1, project = "kidney1", min.cells = 5)
kid1@meta.data$stim <- "KIDNEY1"
kid1 <- FilterCells(kid1, subset.names = "nGene", low.thresholds = 500, high.thresholds = Inf)
kid1 <- NormalizeData(kid1)
kid1 <- ScaleData(kid1, display.progress = F)
# load and create objet for kidney two
kidney2 <- Read10X(data.dir = "~/kid2/")
dim(kidney2)
kid2 <- CreateSeuratObject(raw.data = kidney2, project = "kidney2", min.cells = 5)
kid2@meta.data$stim <- "KIDNEY2"
kid2 <- FilterCells(kid2, subset.names = "nGene", low.thresholds = 500, high.thresholds = Inf)
kid2 <- NormalizeData(kid2)
kid2 <- ScaleData(kid2, display.progress = F)
# select variable genes common between the kidney objects
kid1 <- FindVariableGenes(kid1, do.plot = F)
kid2 <- FindVariableGenes(kid2, do.plot = F)
g.1 <- head(rownames(kid1@hvg.info), 1000)
g.2 <- head(rownames(kid2@hvg.info), 1000)
genes.use <- unique(c(g.1, g.2))
genes.use <- intersect(genes.use, rownames(kid1@scale.data))
genes.use <- intersect(genes.use, rownames(kid2@scale.data))

# run canonical correlation
kidney_combined <- RunCCA(kid1, kid2, genes.use = genes.use, num.cc = 30, add.cell.id1="KIDNEY1",add.cell.id2="KIDNEY2")
p1 <- DimPlot(object = kidney_combined, reduction.use = "cca", group.by = "stim", pt.size = 0.5, do.return = TRUE)
p1
p2 <- VlnPlot(object = kidney_combined, features.plot = "CC1", group.by = "stim", do.return = TRUE)
p2
p3 <- MetageneBicorPlot(kidney_combined, grouping.var = "stim", dims.eval = 1:30, display.progress = FALSE)
p3
DimHeatmap(object = kidney_combined, reduction.type = "cca", cells.use = 500,  dim.use = 1:6, do.balanced = TRUE)
kidney_combined <- AlignSubspace(kidney_combined, reduction.type = "cca", grouping.var = "stim",  dims.align = 1:30)
p1 <- VlnPlot(object = kidney_combined, features.plot = "ACC1", group.by = "stim", do.return = TRUE)
p2 <- VlnPlot(object = kidney_combined, features.plot = "ACC2", group.by = "stim", do.return = TRUE)
p1
p2
# run tSNE analysis
kidney_combined <- RunTSNE(kidney_combined, reduction.use = "cca.aligned", dims.use = 1:30,                            do.fast = T)
kidney_combined <- FindClusters(kidney_combined, reduction.type = "cca.aligned", 
                                resolution = 0.6, dims.use = 1:30)
p1 <- TSNEPlot(kidney_combined, do.return = T, pt.size = 0.5, group.by = "stim")
p1

p2 <- TSNEPlot(kidney_combined, do.label = T, do.return = T, pt.size = 1)
p2
# heatmap on best markers
markers <- FindAllMarkers(  object = kidney_combined,  only.pos = TRUE,  min.pct = 0.25,  thresh.use = 0.25)
library(dplyr)
top5 <- markers %>% group_by(cluster) %>% top_n(5, avg_logFC)
DoHeatmap(object = kidney_combined,  genes.use = top5$gene,  slim.col.label = TRUE, remove.key = TRUE)

# graphical views of marker expression
FeaturePlot(object = kidney_combined, features.plot = c("SRGN","CD74","PODXL","GPX3"), min.cutoff = "q9", cols.use = c("lightgrey", "blue"), pt.size = 0.5)
svg(file="plot.svg")
VlnPlot(kidney_combined, c("SOX7"))
dev.off()
# save the project
save(kidney_combined, file = "kidney_combined.Robj")
